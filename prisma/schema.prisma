// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  phone       String?   @unique
  name        String
  password    String
  role        Role      @default(USER)
  addressBook Address[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  USER
  AGENT
  ADMIN
}

model Address {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  description String
  latitude    Float
  longitude   Float
  active      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id        String           @id @default(cuid())
  name      String
  sizeKg    Float
  basePrice Float
  stations  ProductStation[]
  Inventory Inventory[]
  createdAt DateTime         @default(now())
}

model ProductStation {
  id        String  @id @default(cuid())
  station   Station @relation(fields: [stationId], references: [id])
  stationId String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  price     Float
}

model Station {
  id        String           @id @default(cuid())
  brand     StationBrand
  name      String
  latitude  Float
  longitude Float
  isActive  Boolean          @default(true)
  openHours String?
  inventory Inventory[]
  products  ProductStation[]
  createdAt DateTime         @default(now())
}

enum StationBrand {
  SHELL
  TOTAL
}

model Inventory {
  id        String   @id @default(cuid())
  station   Station  @relation(fields: [stationId], references: [id])
  stationId String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  updatedAt DateTime @updatedAt
}
